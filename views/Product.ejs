<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Mis Productos</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"/>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background-color: #f4f6f9;
      margin: 0;
      padding: 0;
      color: #333;
      animation: fadeInPage 0.6s ease-in-out;
    }

    @keyframes fadeInPage {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    header {
      background-color: #3f51b5;
      color: white;
      padding: 1rem 2rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      cursor: pointer;
    }

    header h1 {
      margin: 0;
      font-size: 1.5rem;
    }

    .container {
      max-width: 960px;
      margin: 2rem auto;
      padding: 1rem;
    }

    .toggle-form-btn {
      background-color: #3f51b5;
      color: white;
      border: none;
      padding: 0.6rem 1.1rem;
      font-size: 1rem;
      border-radius: 8px;
      cursor: pointer;
      margin-bottom: 1rem;
      transition: background-color 0.3s ease;
    }

    .toggle-form-btn:hover {
      background-color: #303f9f;
    }

    .product-form {
      display: none;
      margin-bottom: 2rem;
      background: #e8eaf6;
      padding: 1rem 1.2rem;
      border-radius: 10px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      animation: fadeInForm 0.5s ease-in-out;
    }

    @keyframes fadeInForm {
      from { opacity: 0; transform: translateY(-10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .product-form input, .product-form button {
      margin: 0.5rem 0;
      width: 100%;
      padding: 0.6rem;
      font-size: 1rem;
      border-radius: 6px;
      border: 1px solid #ccc;
    }

    .promotion-container {
      display: flex;
      justify-content: start;
      align-items: center;
      gap: 2rem;
      margin-top: 0.5rem;
    }

    .promotion-container label {
      display: flex;
      align-items: center;
      font-size: 1rem;
      gap: 0.4rem;
      cursor: pointer;
    }

    .promotion-container input[type="checkbox"] {
      width: 16px;
      height: 16px;
    }

    .product-form button {
      background-color: #3949ab;
      color: white;
      border: none;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .product-form button:hover {
      background-color: #303f9f;
    }

    .search-bar {
      margin: 1rem 0;
    }

    .search-bar input {
      width: 100%;
      padding: 0.5rem;
      border: 1px solid #ccc;
      border-radius: 6px;
      font-size: 1rem;
    }

    .product-list {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 1rem;
    }

    .product-card {
      background: white;
      padding: 1rem;
      border-radius: 10px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      transition: transform 0.3s;
      cursor: pointer;
    }

    .product-card:hover {
      transform: translateY(-5px);
    }

    .product-card.selected {
      border: 2px solid #3949ab;
      box-shadow: 0 0 0 3px rgba(57, 73, 171, 0.2);
    }

    .product-card h3 {
      margin: 0;
      font-size: 1.2rem;
      color: #3f51b5;
    }

    .product-card p {
      margin: 0.3rem 0;
    }

    .product-card .actions {
      margin-top: 0.5rem;
    }

    .product-card .actions form,
    .product-card .actions a {
      display: inline-block;
      margin-right: 0.5rem;
    }

    .icon-btn {
      background: none;
      border: none;
      cursor: pointer;
      color: #555;
      font-size: 1.1rem;
    }

    .icon-btn:hover {
      color: #f44336;
    }

    .edit-icon:hover {
      color: #4caf50;
    }

    .logout {
      background: #f44336;
      border: none;
      color: white;
      padding: 0.5rem 1rem;
      border-radius: 6px;
      cursor: pointer;
    }

    .logout:hover {
      background: #d32f2f;
    }

    .send-btn {
      position: fixed;
      bottom: 20px;
      right: 20px;
      background-color: #3949ab;
      color: white;
      border: none;
      border-radius: 50%;
      width: 60px;
      height: 60px;
      font-size: 24px;
      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
      cursor: pointer;
      transition: all 0.3s;
      display: none;
      z-index: 40;
    }

    .send-btn:hover {
      transform: scale(1.1) rotate(15deg);
      background-color: #2563EB;
    }

    /* Estilos para el modal burbuja */
    #arduinoBubble {
      position: fixed;
      bottom: 90px;
      right: 30px;
      width: 300px;
      background: white;
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.15);
      z-index: 50;
      display: none;
      transform-origin: bottom right;
      animation: bubbleAppear 0.3s ease-out;
      border: 1px solid #e5e7eb;
    }

    @keyframes bubbleAppear {
      from { transform: scale(0.5); opacity: 0; }
      to { transform: scale(1); opacity: 1; }
    }

    #arduinoBubble::after {
      content: '';
      position: absolute;
      bottom: -10px;
      right: 25px;
      width: 0;
      height: 0;
      border-left: 12px solid transparent;
      border-right: 12px solid transparent;
      border-top: 12px solid white;
      filter: drop-shadow(0 2px 2px rgba(0,0,0,0.1));
    }

    .bubble-content {
      padding: 16px;
    }

    .bubble-header {
      font-weight: 600;
      color: #3f51b5;
      margin-bottom: 12px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .bubble-close {
      background: none;
      border: none;
      color: #9ca3af;
      cursor: pointer;
      font-size: 18px;
    }

    .bubble-data {
      background: #f3f4f6;
      padding: 12px;
      border-radius: 8px;
      margin-bottom: 16px;
    }

    .bubble-data p {
      margin: 6px 0;
      font-size: 14px;
    }

    .bubble-select {
      width: 100%;
      padding: 8px 12px;
      border: 1px solid #d1d5db;
      border-radius: 6px;
      margin-bottom: 16px;
      font-size: 14px;
    }

    .bubble-actions {
      display: flex;
      justify-content: flex-end;
      gap: 8px;
    }

    .bubble-btn {
      padding: 8px 16px;
      border-radius: 6px;
      font-size: 14px;
      cursor: pointer;
      transition: all 0.2s;
    }

    .bubble-btn-cancel {
      background: #f3f4f6;
      color: #4b5563;
      border: 1px solid #d1d5db;
    }

    .bubble-btn-cancel:hover {
      background: #e5e7eb;
    }

    .bubble-btn-send {
      background: #3f51b5;
      color: white;
      border: none;
    }

    .bubble-btn-send:hover {
      background: #303f9f;
    }

    .bubble-btn-send:disabled {
      background: #9ca3af;
      cursor: not-allowed;
    }
  </style>
</head>
<body>

  <header onclick="window.location.href='/dashboard'">
    <h1>SMARTSHELF - Gestión de Productos</h1>
    <form action="/logout" method="POST">
      <button class="logout">Cerrar sesión</button>
    </form>
  </header>

  <div class="container">
    <button class="toggle-form-btn" onclick="toggleForm()">
      <i class="fas fa-plus"></i> Agregar Producto
    </button>

    <section class="product-form" id="productForm">
      <h2>Agregar Nuevo Producto</h2>
      <form action="/products" method="POST">
        <input type="text" name="name" placeholder="Nombre del producto" required>
        <input type="number" name="price" placeholder="Precio" step="0.01" required>
        <input type="text" name="promotion" placeholder="Promoción (opcional)">
        <div class="promotion-container">
          <label>
            <input type="checkbox" name="promotion_enabled">
            Promoción activa
          </label>
          <label>
            <input type="checkbox" name="available" checked>
            Disponible
          </label>
        </div>
        <button type="submit">Agregar Producto</button>
      </form>
    </section>

    <div class="search-bar">
      <input type="text" id="search" placeholder="Buscar productos...">
    </div>

    <section class="product-list" id="productList">
      <% productos.forEach(producto => { %>
        <div class="product-card" 
             data-id="<%= producto._id %>" 
             data-name="<%= producto.name %>" 
             data-price="<%= producto.price %>" 
             data-promotion="<%= producto.promotion %>" 
             data-available="<%= producto.available %>" 
             data-promo-enabled="<%= producto.promotion_enabled %>">
          <h3><%= producto.name %></h3>
          <p>Precio: $<%= producto.price.toFixed(2) %></p>
          <% if (producto.promotion_enabled) { %>
            <p><strong>Promo:</strong> <%= producto.promotion %></p>
          <% } %>
          <p>Estado: <%= producto.available ? "Disponible" : "No disponible" %></p>
          <div class="actions">
            <a href="/products/<%= producto._id %>/edit" class="icon-btn edit-icon" title="Editar">
              <i class="fas fa-pen"></i>
            </a>
            <form action="/products/<%= producto._id %>/delete" method="POST" style="display:inline;">
              <button type="submit" class="icon-btn" title="Eliminar">
                <i class="fas fa-trash"></i>
              </button>
            </form>
          </div>
        </div>
      <% }) %>
    </section>
  </div>

  <!-- Botón del avioncito -->
  <button class="send-btn" id="sendBtn" onclick="showArduinoBubble()">
    <i class="fas fa-paper-plane"></i>
  </button>

  <!-- Modal burbuja para Arduino -->
  <div id="arduinoBubble">
    <div class="bubble-content">
      <div class="bubble-header">
        <span>Enviar Producto</span>
        <button class="bubble-close" onclick="hideArduinoBubble()">&times;</button>
      </div>
      <div class="bubble-data">
        <p id="bubbleProductName"><strong>Producto:</strong> <span id="productNameValue"></span></p>
        <p id="bubbleProductPrice"><strong>Precio:</strong> $<span id="productPriceValue"></span></p>
        <p id="bubbleProductPromo" style="display: none;"><strong>Promoción:</strong> <span id="productPromoValue"></span></p>
      </div>
      <select id="puertoSelect" class="bubble-select">
        <option value="">Selecciona un puerto</option>
        <% puertos.forEach(puerto => { %>
          <option value="<%= puerto.path %>"><%= puerto.path %> (<%= puerto.manufacturer || 'Desconocido' %>)</option>
        <% }) %>
      </select>
      <div class="bubble-actions">
        <button class="bubble-btn bubble-btn-cancel" onclick="hideArduinoBubble()">Cancelar</button>
        <button id="bubbleSendBtn" class="bubble-btn bubble-btn-send" disabled onclick="sendToArduino()">Enviar</button>
      </div>
    </div>
  </div>

  <script>
    function toggleForm() {
      const form = document.getElementById('productForm');
      form.style.display = form.style.display === 'none' || form.style.display === '' ? 'block' : 'none';
    }

    document.getElementById('search').addEventListener('input', function () {
      const filter = this.value.toLowerCase();
      document.querySelectorAll('.product-card').forEach(card => {
        const name = card.querySelector('h3').textContent.toLowerCase();
        card.style.display = name.includes(filter) ? '' : 'none';
      });
    });

    let selectedCard = null;

    document.querySelectorAll('.product-card').forEach(card => {
      card.addEventListener('click', function () {
        if (this.dataset.available !== "true") return;

        if (selectedCard && selectedCard !== this) {
          selectedCard.classList.remove('selected');
        }

        this.classList.toggle('selected');
        selectedCard = this.classList.contains('selected') ? this : null;

        document.getElementById('sendBtn').style.display = selectedCard ? 'block' : 'none';
      });
    });

    // Mostrar burbuja de Arduino
    function showArduinoBubble() {
      if (!selectedCard) {
        alert("Por favor, selecciona un producto disponible primero");
        return;
      }

      const bubble = document.getElementById('arduinoBubble');
      bubble.style.display = 'block';
      
      // Llenar datos del producto
      document.getElementById('productNameValue').textContent = selectedCard.dataset.name;
      document.getElementById('productPriceValue').textContent = parseFloat(selectedCard.dataset.price).toFixed(2);
      
      const promoElement = document.getElementById('bubbleProductPromo');
      if (selectedCard.dataset.promoEnabled === "true") {
        document.getElementById('productPromoValue').textContent = selectedCard.dataset.promotion;
        promoElement.style.display = 'block';
      } else {
        promoElement.style.display = 'none';
      }
    }

    // Ocultar burbuja de Arduino
    function hideArduinoBubble() {
      document.getElementById('arduinoBubble').style.display = 'none';
    }

    // Habilitar botón de enviar cuando se selecciona un puerto
    document.getElementById('puertoSelect').addEventListener('change', function() {
      document.getElementById('bubbleSendBtn').disabled = this.value === '';
    });

    // Función para enviar a Arduino
  async function sendToArduino() {
  // Elementos UI
  const puerto = document.getElementById('puertoSelect').value;
  const productId = selectedCard.dataset.id;
  const sendBtn = document.getElementById('bubbleSendBtn');
  const originalBtnText = sendBtn.innerHTML;

  // Validaciones iniciales
  if (!puerto) {
    showAlert('Por favor selecciona un puerto serial', 'error');
    return;
  }

  if (!productId) {
    showAlert('No se ha seleccionado un producto válido', 'error');
    return;
  }

  // Mostrar estado de carga
  sendBtn.disabled = true;
  sendBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Enviando...';

  try {
    const response = await fetch(`/products/${productId}/arduino`, {
      method: 'POST',
      headers: { 
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      body: JSON.stringify({ 
        puerto: puerto.trim() // Limpieza del valor
      })
    });

    // Verificar estado HTTP y parseo JSON
    if (!response.ok) {
      const errorData = await response.json().catch(() => null);
      throw new Error(errorData?.message || `Error HTTP: ${response.status}`);
    }

    const data = await response.json();
    
    // Verificar éxito en respuesta
    if (!data.success) {
      throw new Error(data.message || 'La operación no fue exitosa');
    }

    // Feedback al usuario
    showAlert(`✅ ${data.message}`, 'success');
    hideArduinoBubble();

    // Opcional: Loggear en consola los datos enviados
    console.log('Datos enviados correctamente:', {
      productId,
      puerto,
      responseData: data
    });

  } catch (error) {
    console.error('Error en sendToArduino:', error);
    
    // Mensaje de error mejorado
    const userMessage = error.message.includes('Failed to fetch') 
      ? 'Error de conexión con el servidor' 
      : error.message;
    
    showAlert(`⚠️ Error: ${userMessage}`, 'error');
    
    // Opcional: Mostrar detalles técnicos en modo desarrollo
    if (process.env.NODE_ENV === 'development') {
      console.debug('Detalles del error:', {
        puerto,
        productId,
        error: error.stack
      });
    }
  } finally {
    // Restaurar botón
    sendBtn.disabled = false;
    sendBtn.innerHTML = originalBtnText;
  }
}

// Función auxiliar para mostrar alertas (puedes personalizarla)
function showAlert(message, type = 'info') {
  // Implementación básica (puedes usar Toast, SweetAlert, etc.)
  const alertDiv = document.createElement('div');
  alertDiv.className = `alert ${type}`;
  alertDiv.textContent = message;
  document.body.appendChild(alertDiv);
  
  // Auto-eliminación después de 5 segundos
  setTimeout(() => {
    alertDiv.remove();
  }, 5000);
}
  </script>
</body>
</html>
